import { useState } from "react";
import { AuctionListing, Bidder1 } from "./RealWorldExample";

// This file is for example purposes only.
// In the real world the auction listing data, user info, and other key data would be stored and retrieved from a database
// additionally the user creation would not happen here but most likely upon account creation
// This file was 100% generated by AI so it may have other mistakes.
// The point for this app is truly in the Real World example and the Academic Example

function ObserverPatternView() {
  const [auctionListing] = useState(() => new AuctionListing({ id: 1, price: 0 }));
  const [currentPrice, setCurrentPrice] = useState(auctionListing.state.price);
  const [bidAmount, setBidAmount] = useState('');
  const [log, setLog] = useState<string[]>([]);

  useState(() => {
    const bidder = new Bidder1();
    auctionListing.addBidder(bidder);
  });

  const handleBid = () => {
    const bid = parseFloat(bidAmount);
    if (isNaN(bid) || bid <= currentPrice) {
      setLog(prev => [`❌ Invalid bid: ${bidAmount}`, ...prev]);
      return;
    }

    auctionListing.placeBid(bid);
    setCurrentPrice(bid);
    setLog(prev => [`✅ Bid placed: $${bid}`, ...prev]);
    setBidAmount('');
  };

  return (
    <div className="p-4">
      <h1 className="text-2xl font-bold mb-2">Auction Listing</h1>

      <div className="mb-4">
        <div>ID: {auctionListing.state.id}</div>
        <div>Price: ${currentPrice}</div>
      </div>

      <div className="mb-4">
        <input
          type="number"
          value={bidAmount}
          onChange={(e) => setBidAmount(e.target.value)}
          placeholder="Enter your bid"
          className="border px-2 py-1 mr-2"
        />
        <button
          onClick={handleBid}
          className="bg-blue-500 text-white px-3 py-1 rounded"
        >
          Place Bid
        </button>
      </div>

      <div>
        <h2 className="font-semibold">Bid Log:</h2>
        <ul className="list-disc pl-5">
          {log.map((entry, index) => (
            <li key={index}>{entry}</li>
          ))}
        </ul>
      </div>
    </div>
  );
}

export { ObserverPatternView };
